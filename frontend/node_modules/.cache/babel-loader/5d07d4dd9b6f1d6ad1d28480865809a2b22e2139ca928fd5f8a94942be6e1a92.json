{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects1\\\\quizdemo\\\\frontend\\\\src\\\\components\\\\QuizSession.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport io from \"socket.io-client\";\nimport { useLocation, useParams, useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function QuizSession() {\n  _s();\n  const {\n    code\n  } = useParams();\n  const state = useLocation();\n  const navigate = useNavigate();\n  const [socket] = useState(() => io(\"http://localhost:5000\"));\n  const [qIndex, setQIndex] = useState(0);\n  const [question, setQuestion] = useState(null);\n  const [time, setTime] = useState(0);\n  const [questions, setQuestions] = useState([]);\n  const [answered, setAnswered] = useState(false);\n  useEffect(() => {\n    socket.emit(\"joinQuiz\", {\n      sessionCode: code,\n      name: state.name\n    });\n    socket.on(\"startQuiz\", ({\n      questions: qs,\n      timePerQuestion\n    }) => {\n      setQuestions(qs);\n      setTime(timePerQuestion);\n      setQuestion(qs[0]);\n      setQIndex(0);\n      setAnswered(false);\n    });\n    socket.on(\"nextQuestion\", ({\n      questionIndex,\n      text,\n      options\n    }) => {\n      setQIndex(questionIndex);\n      setQuestion({\n        text,\n        options\n      });\n      setTime(15); // Reset timer for next question\n      setAnswered(false);\n    });\n    socket.on(\"quizResults\", data => {\n      navigate(\"/results\", {\n        state: data\n      });\n    });\n    return () => socket.disconnect();\n  }, [socket, code, state.name, navigate]);\n\n  // Timer logic\n  useEffect(() => {\n    if (!question || answered) return;\n    let timerId = setInterval(() => {\n      setTime(prev => {\n        if (prev <= 1) {\n          handleTimeout();\n          clearInterval(timerId);\n          return 0;\n        }\n        return prev - 1;\n      });\n    }, 1000);\n    return () => clearInterval(timerId);\n  }, [question, answered, qIndex]);\n  const handleTimeout = () => {\n    if (answered) return;\n    setAnswered(true);\n    socket.emit(\"answer\", {\n      sessionCode: code,\n      questionIndex: qIndex,\n      selectedIndex: null,\n      name: state.name\n    });\n    moveNext();\n  };\n  const choose = idx => {\n    if (answered) return;\n    setAnswered(true);\n    socket.emit(\"answer\", {\n      sessionCode: code,\n      questionIndex: qIndex,\n      selectedIndex: idx,\n      name: state.name\n    });\n    moveNext();\n  };\n  const moveNext = () => {\n    // FIXED: Properly check if this is the last question\n    if (qIndex + 1 >= questions.length) {\n      // This was the last question, finish quiz\n      socket.emit(\"finishQuiz\", {\n        sessionCode: code\n      });\n    } else {\n      // Move to next question\n      socket.emit(\"nextQuestion\", {\n        sessionCode: code,\n        questionIndex: qIndex + 1\n      });\n    }\n  };\n  if (!question) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Waiting for quiz to start...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: question.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), question.options.map((opt, i) => /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => choose(i),\n      disabled: answered,\n      children: opt\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Time left: \", time, \"s\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Question \", qIndex + 1, \" of \", questions.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n}\n_s(QuizSession, \"wrioY33FY2Vr3vHlUFFu0iHoOkQ=\", false, function () {\n  return [useParams, useLocation, useNavigate];\n});\n_c = QuizSession;\nvar _c;\n$RefreshReg$(_c, \"QuizSession\");","map":{"version":3,"names":["useEffect","useState","io","useLocation","useParams","useNavigate","jsxDEV","_jsxDEV","QuizSession","_s","code","state","navigate","socket","qIndex","setQIndex","question","setQuestion","time","setTime","questions","setQuestions","answered","setAnswered","emit","sessionCode","name","on","qs","timePerQuestion","questionIndex","text","options","data","disconnect","timerId","setInterval","prev","handleTimeout","clearInterval","selectedIndex","moveNext","choose","idx","length","children","fileName","_jsxFileName","lineNumber","columnNumber","map","opt","i","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Projects1/quizdemo/frontend/src/components/QuizSession.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport io from \"socket.io-client\";\r\nimport { useLocation, useParams, useNavigate } from \"react-router-dom\";\r\n\r\nexport default function QuizSession() {\r\n  const { code } = useParams();\r\n  const state = useLocation();\r\n  const navigate = useNavigate();\r\n  const [socket] = useState(() => io(\"http://localhost:5000\"));\r\n  const [qIndex, setQIndex] = useState(0);\r\n  const [question, setQuestion] = useState(null);\r\n  const [time, setTime] = useState(0);\r\n  const [questions, setQuestions] = useState([]);\r\n  const [answered, setAnswered] = useState(false);\r\n\r\n  useEffect(() => {\r\n    socket.emit(\"joinQuiz\", { sessionCode: code, name: state.name });\r\n\r\n    socket.on(\"startQuiz\", ({ questions: qs, timePerQuestion }) => {\r\n      setQuestions(qs);\r\n      setTime(timePerQuestion);\r\n      setQuestion(qs[0]);\r\n      setQIndex(0);\r\n      setAnswered(false);\r\n    });\r\n\r\n    socket.on(\"nextQuestion\", ({ questionIndex, text, options }) => {\r\n      setQIndex(questionIndex);\r\n      setQuestion({ text, options });\r\n      setTime(15); // Reset timer for next question\r\n      setAnswered(false);\r\n    });\r\n\r\n    socket.on(\"quizResults\", (data) => {\r\n      navigate(\"/results\", { state: data });\r\n    });\r\n\r\n    return () => socket.disconnect();\r\n  }, [socket, code, state.name, navigate]);\r\n\r\n  // Timer logic\r\n  useEffect(() => {\r\n    if (!question || answered) return;\r\n    let timerId = setInterval(() => {\r\n      setTime(prev => {\r\n        if (prev <= 1) {\r\n          handleTimeout();\r\n          clearInterval(timerId);\r\n          return 0;\r\n        }\r\n        return prev - 1;\r\n      });\r\n    }, 1000);\r\n    return () => clearInterval(timerId);\r\n  }, [question, answered, qIndex]);\r\n\r\n  const handleTimeout = () => {\r\n    if (answered) return;\r\n    setAnswered(true);\r\n    socket.emit(\"answer\", {\r\n      sessionCode: code,\r\n      questionIndex: qIndex,\r\n      selectedIndex: null,\r\n      name: state.name\r\n    });\r\n    moveNext();\r\n  };\r\n\r\n  const choose = (idx) => {\r\n    if (answered) return;\r\n    setAnswered(true);\r\n    socket.emit(\"answer\", {\r\n      sessionCode: code,\r\n      questionIndex: qIndex,\r\n      selectedIndex: idx,\r\n      name: state.name\r\n    });\r\n    moveNext();\r\n  };\r\n\r\n  const moveNext = () => {\r\n    // FIXED: Properly check if this is the last question\r\n    if (qIndex + 1 >= questions.length) {\r\n      // This was the last question, finish quiz\r\n      socket.emit(\"finishQuiz\", { sessionCode: code });\r\n    } else {\r\n      // Move to next question\r\n      socket.emit(\"nextQuestion\", {\r\n        sessionCode: code,\r\n        questionIndex: qIndex + 1\r\n      });\r\n    }\r\n  };\r\n\r\n  if (!question) return <p>Waiting for quiz to start...</p>;\r\n\r\n  return (\r\n    <div>\r\n      <h3>{question.text}</h3>\r\n      {question.options.map((opt, i) => (\r\n        <button key={i} onClick={() => choose(i)} disabled={answered}>{opt}</button>\r\n      ))}\r\n      <p>Time left: {time}s</p>\r\n      <p>Question {qIndex + 1} of {questions.length}</p>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}