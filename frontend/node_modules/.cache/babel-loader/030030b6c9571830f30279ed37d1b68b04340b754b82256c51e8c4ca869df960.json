{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects1\\\\quizdemo\\\\frontend\\\\src\\\\components\\\\QuizSession.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { io } from 'socket.io-client';\nimport { useLocation, useParams, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function QuizSession() {\n  _s();\n  const {\n    code\n  } = useParams();\n  const {\n    state\n  } = useLocation();\n  const navigate = useNavigate();\n  const [socket] = useState(() => io('http://localhost:5000'));\n  const [qIndex, setQIndex] = useState(0);\n  const [question, setQuestion] = useState(null);\n  const [time, setTime] = useState(0);\n  useEffect(() => {\n    socket.emit('joinQuiz', {\n      sessionCode: code,\n      name: state.name\n    });\n    socket.on('startQuiz', ({\n      questions,\n      timePerQuestion\n    }) => {\n      setTime(timePerQuestion);\n      setQuestion(questions[0]);\n    });\n    socket.on('nextQuestion', ({\n      questionIndex,\n      text,\n      options\n    }) => {\n      setQIndex(questionIndex);\n      setQuestion({\n        text,\n        options\n      });\n      setTime(prev => prev); // reset timer if handled client-side\n    });\n    socket.on('quizResults', data => {\n      navigate('/results', {\n        state: data\n      });\n    });\n    // auto-advance and finish\n    let timer;\n    if (question) {\n      timer = setTimeout(() => {\n        socket.emit('answer', {\n          sessionCode: code,\n          questionIndex: qIndex,\n          selectedIndex: null,\n          name: state.name\n        });\n        if (qIndex + 1 < question.options.length) {\n          socket.emit('nextQuestion', {\n            sessionCode: code,\n            questionIndex: qIndex + 1\n          });\n        } else {\n          socket.emit('finishQuiz', {\n            sessionCode: code\n          });\n        }\n      }, time * 1000);\n    }\n    return () => clearTimeout(timer);\n  }, [socket, question, qIndex, time, code, state.name, navigate]);\n  const choose = idx => {\n    socket.emit('answer', {\n      sessionCode: code,\n      questionIndex: qIndex,\n      selectedIndex: idx,\n      name: state.name\n    });\n    if (qIndex + 1 < question.options.length) {\n      socket.emit('nextQuestion', {\n        sessionCode: code,\n        questionIndex: qIndex + 1\n      });\n    } else {\n      socket.emit('finishQuiz', {\n        sessionCode: code\n      });\n    }\n  };\n  if (!question) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Waiting for quiz to start\\u2026\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: question.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), question.options.map((opt, i) => /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => choose(i),\n      children: opt\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 40\n    }, this)), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Time left: \", time]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(QuizSession, \"1s+kXKS77ICdznZjvXteoi8TLnE=\", false, function () {\n  return [useParams, useLocation, useNavigate];\n});\n_c = QuizSession;\nvar _c;\n$RefreshReg$(_c, \"QuizSession\");","map":{"version":3,"names":["useEffect","useState","io","useLocation","useParams","useNavigate","jsxDEV","_jsxDEV","QuizSession","_s","code","state","navigate","socket","qIndex","setQIndex","question","setQuestion","time","setTime","emit","sessionCode","name","on","questions","timePerQuestion","questionIndex","text","options","prev","data","timer","setTimeout","selectedIndex","length","clearTimeout","choose","idx","children","fileName","_jsxFileName","lineNumber","columnNumber","map","opt","i","onClick","_c","$RefreshReg$"],"sources":["C:/Projects1/quizdemo/frontend/src/components/QuizSession.js"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { io } from 'socket.io-client';\r\nimport { useLocation, useParams, useNavigate } from 'react-router-dom';\r\n\r\nexport default function QuizSession() {\r\n  const { code } = useParams();\r\n  const { state } = useLocation();\r\n  const navigate = useNavigate();\r\n  const [socket] = useState(() => io('http://localhost:5000'));\r\n  const [qIndex, setQIndex] = useState(0);\r\n  const [question, setQuestion] = useState(null);\r\n  const [time, setTime] = useState(0);\r\n\r\n  useEffect(() => {\r\n    socket.emit('joinQuiz', { sessionCode: code, name: state.name });\r\n    socket.on('startQuiz', ({ questions, timePerQuestion }) => {\r\n      setTime(timePerQuestion);\r\n      setQuestion(questions[0]);\r\n    });\r\n    socket.on('nextQuestion', ({ questionIndex, text, options }) => {\r\n      setQIndex(questionIndex);\r\n      setQuestion({ text, options });\r\n      setTime(prev => prev); // reset timer if handled client-side\r\n    });\r\n    socket.on('quizResults', data => {\r\n      navigate('/results', { state: data });\r\n    });\r\n    // auto-advance and finish\r\n    let timer;\r\n    if (question) {\r\n      timer = setTimeout(() => {\r\n        socket.emit('answer', { sessionCode: code, questionIndex: qIndex, selectedIndex: null, name: state.name });\r\n        if (qIndex + 1 < question.options.length) {\r\n          socket.emit('nextQuestion', { sessionCode: code, questionIndex: qIndex + 1 });\r\n        } else {\r\n          socket.emit('finishQuiz', { sessionCode: code });\r\n        }\r\n      }, time * 1000);\r\n    }\r\n    return () => clearTimeout(timer);\r\n  }, [socket, question, qIndex, time, code, state.name, navigate]);\r\n\r\n  const choose = idx => {\r\n    socket.emit('answer', { sessionCode: code, questionIndex: qIndex, selectedIndex: idx, name: state.name });\r\n    if (qIndex + 1 < question.options.length) {\r\n      socket.emit('nextQuestion', { sessionCode: code, questionIndex: qIndex + 1 });\r\n    } else {\r\n      socket.emit('finishQuiz', { sessionCode: code });\r\n    }\r\n  };\r\n\r\n  if (!question) return <p>Waiting for quiz to startâ€¦</p>;\r\n  return (\r\n    <div>\r\n      <h3>{question.text}</h3>\r\n      {question.options.map((opt,i) => <button key={i} onClick={()=>choose(i)}>{opt}</button>)}\r\n      <p>Time left: {time}</p>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}