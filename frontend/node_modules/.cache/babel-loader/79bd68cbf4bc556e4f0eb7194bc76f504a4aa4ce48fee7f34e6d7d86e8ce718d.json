{"ast":null,"code":"const resultSchema = new mongoose.Schema({\n  participantName: {\n    type: String,\n    required: true\n  },\n  sessionCode: {\n    type: String,\n    required: true\n  },\n  totalScore: {\n    type: Number,\n    required: true\n  },\n  // Final score with +1/-1/0 system\n  maxPossibleScore: {\n    type: Number,\n    required: true\n  },\n  minPossibleScore: {\n    type: Number,\n    required: true\n  },\n  correctCount: {\n    type: Number,\n    default: 0\n  },\n  incorrectCount: {\n    type: Number,\n    default: 0\n  },\n  notAttemptedCount: {\n    type: Number,\n    default: 0\n  },\n  totalQuestions: {\n    type: Number,\n    required: true\n  },\n  accuracyPercentage: {\n    type: Number,\n    default: 0\n  },\n  grade: {\n    type: String,\n    default: 'F'\n  },\n  scoreBreakdown: {\n    correctPoints: {\n      type: Number,\n      default: 0\n    },\n    incorrectPoints: {\n      type: Number,\n      default: 0\n    },\n    notAttemptedPoints: {\n      type: Number,\n      default: 0\n    }\n  },\n  detailedAnswers: [{\n    questionNumber: Number,\n    question: String,\n    options: [String],\n    selectedIndex: Number,\n    selectedAnswer: String,\n    correctIndex: Number,\n    correctAnswer: String,\n    answerType: String,\n    scoreChange: Number,\n    runningTotal: Number\n  }],\n  createdAt: {\n    type: Date,\n    default: Date.now\n  }\n});\nmodule.exports = mongoose.model('Result', resultSchema);","map":{"version":3,"names":["resultSchema","mongoose","Schema","participantName","type","String","required","sessionCode","totalScore","Number","maxPossibleScore","minPossibleScore","correctCount","default","incorrectCount","notAttemptedCount","totalQuestions","accuracyPercentage","grade","scoreBreakdown","correctPoints","incorrectPoints","notAttemptedPoints","detailedAnswers","questionNumber","question","options","selectedIndex","selectedAnswer","correctIndex","correctAnswer","answerType","scoreChange","runningTotal","createdAt","Date","now","module","exports","model"],"sources":["C:/Projects1/quizdemo/frontend/src/components/Results.js"],"sourcesContent":["\r\nconst resultSchema = new mongoose.Schema({\r\n  participantName: { type: String, required: true },\r\n  sessionCode: { type: String, required: true },\r\n  totalScore: { type: Number, required: true }, // Final score with +1/-1/0 system\r\n  maxPossibleScore: { type: Number, required: true },\r\n  minPossibleScore: { type: Number, required: true },\r\n  correctCount: { type: Number, default: 0 },\r\n  incorrectCount: { type: Number, default: 0 },\r\n  notAttemptedCount: { type: Number, default: 0 },\r\n  totalQuestions: { type: Number, required: true },\r\n  accuracyPercentage: { type: Number, default: 0 },\r\n  grade: { type: String, default: 'F' },\r\n  scoreBreakdown: {\r\n    correctPoints: { type: Number, default: 0 },\r\n    incorrectPoints: { type: Number, default: 0 },\r\n    notAttemptedPoints: { type: Number, default: 0 }\r\n  },\r\n  detailedAnswers: [{\r\n    questionNumber: Number,\r\n    question: String,\r\n    options: [String],\r\n    selectedIndex: Number,\r\n    selectedAnswer: String,\r\n    correctIndex: Number,\r\n    correctAnswer: String,\r\n    answerType: String,\r\n    scoreChange: Number,\r\n    runningTotal: Number\r\n  }],\r\n  createdAt: { type: Date, default: Date.now }\r\n});\r\n\r\nmodule.exports = mongoose.model('Result', resultSchema);\r\n"],"mappings":"AACA,MAAMA,YAAY,GAAG,IAAIC,QAAQ,CAACC,MAAM,CAAC;EACvCC,eAAe,EAAE;IAAEC,IAAI,EAAEC,MAAM;IAAEC,QAAQ,EAAE;EAAK,CAAC;EACjDC,WAAW,EAAE;IAAEH,IAAI,EAAEC,MAAM;IAAEC,QAAQ,EAAE;EAAK,CAAC;EAC7CE,UAAU,EAAE;IAAEJ,IAAI,EAAEK,MAAM;IAAEH,QAAQ,EAAE;EAAK,CAAC;EAAE;EAC9CI,gBAAgB,EAAE;IAAEN,IAAI,EAAEK,MAAM;IAAEH,QAAQ,EAAE;EAAK,CAAC;EAClDK,gBAAgB,EAAE;IAAEP,IAAI,EAAEK,MAAM;IAAEH,QAAQ,EAAE;EAAK,CAAC;EAClDM,YAAY,EAAE;IAAER,IAAI,EAAEK,MAAM;IAAEI,OAAO,EAAE;EAAE,CAAC;EAC1CC,cAAc,EAAE;IAAEV,IAAI,EAAEK,MAAM;IAAEI,OAAO,EAAE;EAAE,CAAC;EAC5CE,iBAAiB,EAAE;IAAEX,IAAI,EAAEK,MAAM;IAAEI,OAAO,EAAE;EAAE,CAAC;EAC/CG,cAAc,EAAE;IAAEZ,IAAI,EAAEK,MAAM;IAAEH,QAAQ,EAAE;EAAK,CAAC;EAChDW,kBAAkB,EAAE;IAAEb,IAAI,EAAEK,MAAM;IAAEI,OAAO,EAAE;EAAE,CAAC;EAChDK,KAAK,EAAE;IAAEd,IAAI,EAAEC,MAAM;IAAEQ,OAAO,EAAE;EAAI,CAAC;EACrCM,cAAc,EAAE;IACdC,aAAa,EAAE;MAAEhB,IAAI,EAAEK,MAAM;MAAEI,OAAO,EAAE;IAAE,CAAC;IAC3CQ,eAAe,EAAE;MAAEjB,IAAI,EAAEK,MAAM;MAAEI,OAAO,EAAE;IAAE,CAAC;IAC7CS,kBAAkB,EAAE;MAAElB,IAAI,EAAEK,MAAM;MAAEI,OAAO,EAAE;IAAE;EACjD,CAAC;EACDU,eAAe,EAAE,CAAC;IAChBC,cAAc,EAAEf,MAAM;IACtBgB,QAAQ,EAAEpB,MAAM;IAChBqB,OAAO,EAAE,CAACrB,MAAM,CAAC;IACjBsB,aAAa,EAAElB,MAAM;IACrBmB,cAAc,EAAEvB,MAAM;IACtBwB,YAAY,EAAEpB,MAAM;IACpBqB,aAAa,EAAEzB,MAAM;IACrB0B,UAAU,EAAE1B,MAAM;IAClB2B,WAAW,EAAEvB,MAAM;IACnBwB,YAAY,EAAExB;EAChB,CAAC,CAAC;EACFyB,SAAS,EAAE;IAAE9B,IAAI,EAAE+B,IAAI;IAAEtB,OAAO,EAAEsB,IAAI,CAACC;EAAI;AAC7C,CAAC,CAAC;AAEFC,MAAM,CAACC,OAAO,GAAGrC,QAAQ,CAACsC,KAAK,CAAC,QAAQ,EAAEvC,YAAY,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}